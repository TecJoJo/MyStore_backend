// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyStore_backend.Data;

#nullable disable

namespace MyStore_backend.Migrations.MyStoreProductsDB
{
    [DbContext(typeof(MyStoreProductsDBContext))]
    [Migration("20250617171259_changeCartitemsTableName")]
    partial class changeCartitemsTableName
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.17");

            modelBuilder.Entity("MyStore_backend.Models.Domain.CartItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("CartItems");

                    b.HasData(
                        new
                        {
                            Id = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaa1"),
                            ProductId = new Guid("00000000-0000-0000-0000-000000000001"),
                            Quantity = 2,
                            UserId = new Guid("11111111-1111-1111-1111-111111111111")
                        },
                        new
                        {
                            Id = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaa2"),
                            ProductId = new Guid("00000000-0000-0000-0000-000000000002"),
                            Quantity = 1,
                            UserId = new Guid("11111111-1111-1111-1111-111111111111")
                        },
                        new
                        {
                            Id = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaa3"),
                            ProductId = new Guid("00000000-0000-0000-0000-000000000003"),
                            Quantity = 1,
                            UserId = new Guid("11111111-1111-1111-1111-111111111111")
                        },
                        new
                        {
                            Id = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaa4"),
                            ProductId = new Guid("00000000-0000-0000-0000-000000000004"),
                            Quantity = 3,
                            UserId = new Guid("11111111-1111-1111-1111-111111111111")
                        },
                        new
                        {
                            Id = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaa5"),
                            ProductId = new Guid("00000000-0000-0000-0000-000000000005"),
                            Quantity = 2,
                            UserId = new Guid("11111111-1111-1111-1111-111111111111")
                        },
                        new
                        {
                            Id = new Guid("bbbbbbbb-bbbb-bbbb-bbbb-bbbbbbbbbbb1"),
                            ProductId = new Guid("00000000-0000-0000-0000-000000000001"),
                            Quantity = 1,
                            UserId = new Guid("22222222-2222-2222-2222-222222222222")
                        },
                        new
                        {
                            Id = new Guid("bbbbbbbb-bbbb-bbbb-bbbb-bbbbbbbbbbb2"),
                            ProductId = new Guid("00000000-0000-0000-0000-000000000002"),
                            Quantity = 2,
                            UserId = new Guid("22222222-2222-2222-2222-222222222222")
                        },
                        new
                        {
                            Id = new Guid("bbbbbbbb-bbbb-bbbb-bbbb-bbbbbbbbbbb3"),
                            ProductId = new Guid("00000000-0000-0000-0000-000000000003"),
                            Quantity = 2,
                            UserId = new Guid("22222222-2222-2222-2222-222222222222")
                        },
                        new
                        {
                            Id = new Guid("bbbbbbbb-bbbb-bbbb-bbbb-bbbbbbbbbbb4"),
                            ProductId = new Guid("00000000-0000-0000-0000-000000000004"),
                            Quantity = 1,
                            UserId = new Guid("22222222-2222-2222-2222-222222222222")
                        },
                        new
                        {
                            Id = new Guid("bbbbbbbb-bbbb-bbbb-bbbb-bbbbbbbbbbb5"),
                            ProductId = new Guid("00000000-0000-0000-0000-000000000005"),
                            Quantity = 3,
                            UserId = new Guid("22222222-2222-2222-2222-222222222222")
                        });
                });

            modelBuilder.Entity("MyStore_backend.Models.Domain.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.Property<int>("Stock")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000001"),
                            Category = "T-Shirt",
                            Description = "A stylish white T-Shirt",
                            ImageUrl = "https://images.unsplash.com/photo-1512436991641-6745cdb1723f?auto=format&fit=crop&w=400&q=80",
                            Name = "Classic White T-Shirt",
                            Price = 29.99m,
                            Stock = 99
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000002"),
                            Category = "Jeans",
                            Description = "Classic blue denim jeans",
                            ImageUrl = "https://vilapuuvilla.fi/cdn/shop/products/0520bad2-dc50-40ae-9f90-afce00862eff_14094341_4429742_001_preview.jpg?v=1701160840",
                            Name = "Denim Jeans",
                            Price = 59.99m,
                            Stock = 50
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000003"),
                            Category = "Shoes",
                            Description = "Comfortable running sneakers",
                            ImageUrl = "https://pyxis.nymag.com/v1/imgs/a6d/fc0/4da4be21d1741718404660586a5b6a6f3e.jpg",
                            Name = "Running Sneakers",
                            Price = 89.99m,
                            Stock = 30
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000004"),
                            Category = "Accessories",
                            Description = "Premium brown leather wallet",
                            ImageUrl = "https://m.media-amazon.com/images/I/81WIcyHQ7oL._AC_UY1100_.jpg",
                            Name = "Leather Wallet",
                            Price = 39.99m,
                            Stock = 40
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000005"),
                            Category = "Hats",
                            Description = "Red adjustable baseball cap",
                            ImageUrl = "https://store.moma.org/cdn/shop/files/3a2b0b12-bde3-4a63-bba2-b561dbd7de29_5fa67989-c4a0-4bea-a74b-fb25ed894895.jpg?v=1710971142",
                            Name = "Baseball Cap",
                            Price = 19.99m,
                            Stock = 60
                        });
                });

            modelBuilder.Entity("MyStore_backend.Models.Domain.CartItem", b =>
                {
                    b.HasOne("MyStore_backend.Models.Domain.Product", "Product")
                        .WithMany("CartItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("MyStore_backend.Models.Domain.Product", b =>
                {
                    b.Navigation("CartItems");
                });
#pragma warning restore 612, 618
        }
    }
}
